<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slfinalproject.commurest.board.repository.BoardMapper">



    <resultMap id="boardMap" type="com.slfinalproject.commurest.board.domain.Board">
        <result property="boardNo" column="board_no"/>
        <result property="userId" column="user_id"/>
        <result property="hit" column="hit"/>
        <result property="regDate" column="reg_date"/>
        <result property="recommend" column="recommend"/>
        <result property="userName" column="user_name"/>
        <result property="fileName" column="file_name"/>
        <result property="tagValue" column="tag_value"/>
    </resultMap>

<!--  통합검색  -->
    <select id="searchAll" resultMap="boardMap">
        SELECT DISTINCT A.board_no, A.content, A.user_id, A.title, A.reg_date, A.hit, A.recommend, B.tag_value
        from board A
        left outer join tag B ON A.board_no = B.board_no
        where A.title like CONCAT('%',#{keyword},'%') or A.content like CONCAT('%',#{keyword},'%') or B.tag_value like CONCAT('%',#{keyword},'%')
        group by A.board_no desc
    </select>
<!--  나의 게시글 수  -->
    <select id="selectCnt" resultMap="boardMap">
        select count(*) as count
        from board
        where user_id=${userId};
    </select>


    <!-- sql 코드 조각 (반복되는 sql의 일부를 sql 태그를 이용하여 따로 빼버림 -->
    <sql id="search">
        <if test="type=='title'">WHERE title LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type=='userName'">WHERE user_name LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type=='content'">WHERE content LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type=='tagValue'">WHERE tag_value LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type=='tc'">
            WHERE title LIKE CONCAT('%', #{keyword}, '%')
            OR content LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </sql>

    <!-- 한건 등록-->
    <insert id="insert">
        INSERT INTO board
        (title, content, user_id)
        VALUES (#{title}, #{content}, #{userId})
    </insert>

    <!-- 게시글 수정-->
    <update id="edit">
        update board set title = #{title}, content = #{content}
        where board_no = #{boardNo}
    </update>

    <!-- 전체조회-->
    <select id="selectAll" resultMap="boardMap">
        SELECT DISTINCT A.board_no, A.user_id, A.title, A.reg_date, A.hit, A.recommend, B.user_name, C.tag_value
        FROM board A
        LEFT outer JOIN user_account B ON A.user_id = B.user_id
        LEFT outer JOIN tag C ON A.board_no = C.board_no
        <include refid="search"/>
        group BY A.board_no DESC
        LIMIT #{start}, #{amount}
    </select>

    <!-- 나의 게시글 조회-->
    <select id="selectAllByUserId" resultMap="boardMap">
        SELECT * from board
        WHERE user_id = #{userId}
        ORDER BY board_no DESC
        LIMIT #{page.start}, #{page.amount}
    </select>



    <!-- 한건 조회-->
    <select id="selectOne" resultMap="boardMap">
        select * from board where board_no = #{boardNo}
    </select>

    <!-- 전체 게시글 수-->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM board
        <include refid="search"/>
    </select>

    <!-- 전체 게시글 수-->
    <select id="getTotalCountSearch" resultType="int">
        SELECT COUNT(A.board_no)  FROM board A
        LEFT JOIN user_account B ON A.user_id = B.user_id
        LEFT JOIN (SELECT DISTINCT board_no FROM tag C) C ON A.board_no = C.board_no;
            <if test="type=='title'">WHERE A.title LIKE CONCAT('%', #{keyword}, '%')</if>
            <if test="type=='userName'">WHERE B.user_name LIKE CONCAT('%', #{keyword}, '%')</if>
            <if test="type=='content'">WHERE A.content LIKE CONCAT('%', #{keyword}, '%')</if>
            <if test="type=='tagValue'">WHERE C.tag_value LIKE CONCAT('%', #{keyword}, '%')</if>
            <if test="type=='tc'">
                WHERE A.title LIKE CONCAT('%', #{keyword}, '%')
                OR A.content LIKE CONCAT('%', #{keyword}, '%')
            </if>
    </select>

    <!-- 나의 게시글 수 -->
    <select id="getTotalCountByUserId" resultType="int">
        SELECT COUNT(*) FROM board where user_id=#{userId}
    </select>

    <!-- 게시글 삭제-->
    <delete id="remove">
        delete from board where board_no = #{boardNo}
    </delete>



    <!-- 조회수 갱신-->
    <update id="hitCount">
        update board set hit= hit+1 where board_no= #{boardNo}
    </update>

    <!-- 첨부파일 추가  -->
    <insert id="addFile">
        INSERT INTO file_upload
        (file_name, bno)
        VALUES
        (#{fileName}, LAST_INSERT_ID())
    </insert>
    <!-- 첨부파일 추가  -->
    <insert id="addFileInBoard">
        INSERT INTO file_upload
        (file_name, bno)
        VALUES
        (#{fileName}, #{boardNo})
    </insert>

    <!-- 파일목록 가져오기 -->
    <select id="fileNames" resultType="string">
        SELECT file_name
        FROM file_upload
        WHERE bno = #{bno}
    </select>

    <!-- 인기글 조회  -->
    <select id="getHitBoard" resultMap="boardMap">
        SELECT * FROM board ORDER BY hit DESC LIMIT 0,5
    </select>

    <select id="findMemberByBoardNo" resultType="string">
        SELECT user_name FROM user_account WHERE user_id= (
            SELECT user_id FROM board WHERE board_no=#{boardNo}
        )
    </select>

    <!-- 이미지가 들어가있는 최신 게시글 조회하기 -->
    <select id="findNewImage" resultMap="boardMap">
        SELECT DISTINCT A.board_no, A.title, B.bno, B.file_name
        FROM board A
        INNER JOIN file_upload B ON A.board_no = B.bno
        GROUP BY  board_no
        ORDER BY  board_no DESC limit 3
    </select>

    <!-- 게시글 추천수 -->
    <update id="updateRecommend" parameterType="int">
        update board set
        recommend = recommend+1
        where bno = #{bno}
    </update>

    <!-- 게시글 추천취소 -->
    <update id="updateRecommendCancel" parameterType="int">
        update board set
        recommend = recommend-1
        where bno = #{bno}
    </update>

    <!-- 게시글 추천 중복방지 select문 -->
    <select id="recommendCheck" resultType="int">
        select count(*) from recommend where bno = #{bno} and user_id = #{userId}
    </select>

</mapper>